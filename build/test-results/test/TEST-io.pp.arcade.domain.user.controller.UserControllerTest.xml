<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="io.pp.arcade.domain.user.controller.UserControllerTest" tests="4" skipped="0" failures="0" errors="0" timestamp="2022-06-14T07:26:34" hostname="KDHs-MacBook-Pro.local" time="1.624">
  <properties/>
  <testcase name="findDetailUser()" classname="io.pp.arcade.domain.user.controller.UserControllerTest" time="0.928"/>
  <testcase name="findUserHistorics()" classname="io.pp.arcade.domain.user.controller.UserControllerTest" time="0.333"/>
  <testcase name="findByPartsOfIntraId()" classname="io.pp.arcade.domain.user.controller.UserControllerTest" time="0.19"/>
  <testcase name="findUser()" classname="io.pp.arcade.domain.user.controller.UserControllerTest" time="0.158"/>
  <system-out><![CDATA[16:26:24.536 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
16:26:24.553 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
16:26:24.612 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [io.pp.arcade.domain.user.controller.UserControllerTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
16:26:24.637 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [io.pp.arcade.domain.user.controller.UserControllerTest], using SpringBootContextLoader
16:26:24.643 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [io.pp.arcade.domain.user.controller.UserControllerTest]: class path resource [io/pp/arcade/domain/user/controller/UserControllerTest-context.xml] does not exist
16:26:24.644 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [io.pp.arcade.domain.user.controller.UserControllerTest]: class path resource [io/pp/arcade/domain/user/controller/UserControllerTestContext.groovy] does not exist
16:26:24.645 [Test worker] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [io.pp.arcade.domain.user.controller.UserControllerTest]: no resource found for suffixes {-context.xml, Context.groovy}.
16:26:24.646 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [io.pp.arcade.domain.user.controller.UserControllerTest]: UserControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
16:26:24.742 [Test worker] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [io.pp.arcade.domain.user.controller.UserControllerTest]
16:26:24.871 [Test worker] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/Users/colin/Documents/Project/42/42arcade/build/classes/java/main/io/pp/arcade/Application.class]
16:26:24.873 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration io.pp.arcade.Application for test class io.pp.arcade.domain.user.controller.UserControllerTest
16:26:25.000 [Test worker] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [io.pp.arcade.domain.user.controller.UserControllerTest]: using defaults.
16:26:25.001 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
16:26:25.063 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@271f18d3, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6bd51ed8, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@61e3a1fd, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@51abf713, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@eadb475, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4d4d48a6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@315df4bb, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3fc08eec, org.springframework.test.context.event.EventPublishingTestExecutionListener@5cad8b7d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7b02e036, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@25243bc1, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1e287667, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2e6ee0bc, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@4201a617, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@467f77a5]
16:26:25.084 [Test worker] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@1556f2dd testClass = UserControllerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@35e52059 testClass = UserControllerTest, locations = '{}', classes = '{class io.pp.arcade.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@6821ea29, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@63da79bb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@e077866, [ImportsContextCustomizer@62577d6 key = [@org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.context.SpringBootTestContextBootstrapper.class), @org.springframework.context.annotation.Import(value={io.pp.arcade.RestDocsConfiguration.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.restdocs", skip=NO), @org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc(webDriverEnabled=true, print=DEFAULT, webClientEnabled=true, addFilters=true, printOnlyOnFailure=true), @org.springframework.boot.test.autoconfigure.restdocs.AutoConfigureRestDocs(uriScheme="http", outputDir="", uriPort=8080, value="", uriHost="localhost"), @org.springframework.context.annotation.Import(value={org.springframework.boot.test.autoconfigure.restdocs.RestDocumentationContextProviderRegistrar.class}), @org.springframework.boot.test.context.SpringBootTest(args={}, webEnvironment=MOCK, value={}, properties={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.mockmvc", skip=NO)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@36546a22, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@3918c187, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@12dae582, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68878f6d], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true]], class annotated with @DirtiesContext [false] with mode [null].

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v2.6.8)

2022-06-14 16:26:25.749  INFO 68227 --- [    Test worker] i.p.a.d.u.controller.UserControllerTest  : Starting UserControllerTest using Java 11.0.13 on KDHs-MacBook-Pro.local with PID 68227 (started by colin in /Users/colin/Documents/Project/42/42arcade)
2022-06-14 16:26:25.753  INFO 68227 --- [    Test worker] i.p.a.d.u.controller.UserControllerTest  : The following 1 profile is active: "local"
2022-06-14 16:26:27.336  INFO 68227 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-06-14 16:26:27.483  INFO 68227 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 138 ms. Found 8 JPA repository interfaces.
2022-06-14 16:26:28.777  INFO 68227 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-06-14 16:26:28.832  INFO 68227 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.9.Final
2022-06-14 16:26:29.032  INFO 68227 --- [    Test worker] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-06-14 16:26:29.157  INFO 68227 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-06-14 16:26:29.729  INFO 68227 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-06-14 16:26:29.747  INFO 68227 --- [    Test worker] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Hibernate: alter table current_match drop foreign key FKmaa4irkiicemkq2gl3t0bqn6a
Hibernate: alter table current_match drop foreign key FK4qtnfmeqkj0iy1qeghm6ywb6n
Hibernate: alter table current_match drop foreign key FKl53dqtyiaemmm1tqdsdj55ng2
Hibernate: alter table game drop foreign key FKgb66of4ini2gvvu76o8pufcr5
Hibernate: alter table game drop foreign key FKjnhlg2dqkrjvaai3e70ymw339
Hibernate: alter table game drop foreign key FKehwjicpbm71ks5yyuo7co77qj
Hibernate: alter table noti drop foreign key FKehey4772h8bhsaix4x6tkrjjc
Hibernate: alter table noti drop foreign key FKbjyk0xemxlmv8f6n7nxvx2akk
Hibernate: alter table pchange drop foreign key FKqu8jxac7ewvc26oc7hukcixxd
Hibernate: alter table pchange drop foreign key FKjld3ge0jy4tjbqxso9wpck9r1
Hibernate: alter table slot drop foreign key FKhs33om0wvyi8uqhn6nusyreuw
Hibernate: alter table slot drop foreign key FK4cc14u3pb35q8d1pbbbu2e6wg
Hibernate: alter table team drop foreign key FKeo0siujn1a48s7c78xcr1q36s
Hibernate: alter table team drop foreign key FKhowcyg7s7wv73ds320qsmtnn4
Hibernate: drop table if exists current_match
Hibernate: drop table if exists game
Hibernate: drop table if exists noti
Hibernate: drop table if exists pchange
Hibernate: drop table if exists season
Hibernate: drop table if exists slot
Hibernate: drop table if exists team
Hibernate: drop table if exists user
Hibernate: create table current_match (id integer not null auto_increment, created_date datetime not null, modified_date datetime, is_matched bit, match_imminent bit, game_id integer, slot_id integer not null, user_id integer not null, primary key (id)) engine=InnoDB
Hibernate: create table game (id integer not null auto_increment, season integer not null, status varchar(255) not null, time datetime not null, type varchar(255) not null, slot_id integer not null, team1_id integer not null, team2_id integer not null, primary key (id)) engine=InnoDB
Hibernate: create table noti (id integer not null auto_increment, created_date datetime not null, modified_date datetime, is_checked bit not null, message varchar(255), noti_type varchar(255) not null, slot_id integer, user_id integer, primary key (id)) engine=InnoDB
Hibernate: create table pchange (id integer not null auto_increment, created_date datetime not null, modified_date datetime, ppp_change integer not null, ppp_result integer not null, game_id integer not null, user_id integer not null, primary key (id)) engine=InnoDB
Hibernate: create table season (id integer not null auto_increment, end_time datetime not null, season_name varchar(255) not null, start_ppp integer not null, start_time datetime not null, primary key (id)) engine=InnoDB
Hibernate: create table slot (id integer not null auto_increment, created_date datetime not null, modified_date datetime, game_ppp integer, head_count integer not null, table_id integer not null, time datetime not null, type varchar(255), team1_id integer not null, team2_id integer not null, primary key (id)) engine=InnoDB
Hibernate: create table team (id integer not null auto_increment, head_count integer not null, score integer not null, team_ppp integer not null, win bit, user1_id integer, user2_id integer, primary key (id)) engine=InnoDB
Hibernate: create table user (id integer not null auto_increment, image_uri varchar(255), intra_id varchar(255) not null, ppp integer not null, racket_type integer, status_message varchar(255) not null, primary key (id)) engine=InnoDB
Hibernate: alter table current_match add constraint FKmaa4irkiicemkq2gl3t0bqn6a foreign key (game_id) references game (id)
Hibernate: alter table current_match add constraint FK4qtnfmeqkj0iy1qeghm6ywb6n foreign key (slot_id) references slot (id)
Hibernate: alter table current_match add constraint FKl53dqtyiaemmm1tqdsdj55ng2 foreign key (user_id) references user (id)
Hibernate: alter table game add constraint FKgb66of4ini2gvvu76o8pufcr5 foreign key (slot_id) references slot (id)
Hibernate: alter table game add constraint FKjnhlg2dqkrjvaai3e70ymw339 foreign key (team1_id) references team (id)
Hibernate: alter table game add constraint FKehwjicpbm71ks5yyuo7co77qj foreign key (team2_id) references team (id)
Hibernate: alter table noti add constraint FKehey4772h8bhsaix4x6tkrjjc foreign key (slot_id) references slot (id)
Hibernate: alter table noti add constraint FKbjyk0xemxlmv8f6n7nxvx2akk foreign key (user_id) references user (id)
Hibernate: alter table pchange add constraint FKqu8jxac7ewvc26oc7hukcixxd foreign key (game_id) references game (id)
Hibernate: alter table pchange add constraint FKjld3ge0jy4tjbqxso9wpck9r1 foreign key (user_id) references user (id)
Hibernate: alter table slot add constraint FKhs33om0wvyi8uqhn6nusyreuw foreign key (team1_id) references team (id)
Hibernate: alter table slot add constraint FK4cc14u3pb35q8d1pbbbu2e6wg foreign key (team2_id) references team (id)
Hibernate: alter table team add constraint FKeo0siujn1a48s7c78xcr1q36s foreign key (user1_id) references user (id)
Hibernate: alter table team add constraint FKhowcyg7s7wv73ds320qsmtnn4 foreign key (user2_id) references user (id)
2022-06-14 16:26:31.592  INFO 68227 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-06-14 16:26:31.601  INFO 68227 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-06-14 16:26:33.139  WARN 68227 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-06-14 16:26:33.922  WARN 68227 --- [    Test worker] ion$DefaultTemplateResolverConfiguration : Cannot find template location: classpath:templates/ (please add some templates or check your Thymeleaf configuration)
2022-06-14 16:26:34.208  INFO 68227 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2022-06-14 16:26:34.208  INFO 68227 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2022-06-14 16:26:34.209  INFO 68227 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
2022-06-14 16:26:34.242  INFO 68227 --- [    Test worker] i.p.a.d.u.controller.UserControllerTest  : Started UserControllerTest in 9.092 seconds (JVM running for 11.331)
2022-06-14 16:26:34.311  INFO 68227 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@1556f2dd testClass = UserControllerTest, testInstance = io.pp.arcade.domain.user.controller.UserControllerTest@2eea0775, testMethod = findDetailUser@UserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@35e52059 testClass = UserControllerTest, locations = '{}', classes = '{class io.pp.arcade.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@6821ea29, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@63da79bb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@e077866, [ImportsContextCustomizer@62577d6 key = [@org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.context.SpringBootTestContextBootstrapper.class), @org.springframework.context.annotation.Import(value={io.pp.arcade.RestDocsConfiguration.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.restdocs", skip=NO), @org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc(webDriverEnabled=true, print=DEFAULT, webClientEnabled=true, addFilters=true, printOnlyOnFailure=true), @org.springframework.boot.test.autoconfigure.restdocs.AutoConfigureRestDocs(uriScheme="http", outputDir="", uriPort=8080, value="", uriHost="localhost"), @org.springframework.context.annotation.Import(value={org.springframework.boot.test.autoconfigure.restdocs.RestDocumentationContextProviderRegistrar.class}), @org.springframework.boot.test.context.SpringBootTest(args={}, webEnvironment=MOCK, value={}, properties={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.mockmvc", skip=NO)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@36546a22, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@3918c187, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@12dae582, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68878f6d], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@a1be5cb]; rollback [true]
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: select user0_.id as id1_7_, user0_.image_uri as image_ur2_7_, user0_.intra_id as intra_id3_7_, user0_.ppp as ppp4_7_, user0_.racket_type as racket_t5_7_, user0_.status_message as status_m6_7_ from user user0_ where user0_.intra_id=?
2022-06-14 16:26:35.213  INFO 68227 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@1556f2dd testClass = UserControllerTest, testInstance = io.pp.arcade.domain.user.controller.UserControllerTest@2eea0775, testMethod = findDetailUser@UserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@35e52059 testClass = UserControllerTest, locations = '{}', classes = '{class io.pp.arcade.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@6821ea29, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@63da79bb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@e077866, [ImportsContextCustomizer@62577d6 key = [@org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.context.SpringBootTestContextBootstrapper.class), @org.springframework.context.annotation.Import(value={io.pp.arcade.RestDocsConfiguration.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.restdocs", skip=NO), @org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc(webDriverEnabled=true, print=DEFAULT, webClientEnabled=true, addFilters=true, printOnlyOnFailure=true), @org.springframework.boot.test.autoconfigure.restdocs.AutoConfigureRestDocs(uriScheme="http", outputDir="", uriPort=8080, value="", uriHost="localhost"), @org.springframework.context.annotation.Import(value={org.springframework.boot.test.autoconfigure.restdocs.RestDocumentationContextProviderRegistrar.class}), @org.springframework.boot.test.context.SpringBootTest(args={}, webEnvironment=MOCK, value={}, properties={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.mockmvc", skip=NO)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@36546a22, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@3918c187, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@12dae582, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68878f6d], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2022-06-14 16:26:35.232  INFO 68227 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@1556f2dd testClass = UserControllerTest, testInstance = io.pp.arcade.domain.user.controller.UserControllerTest@619dc070, testMethod = findUserHistorics@UserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@35e52059 testClass = UserControllerTest, locations = '{}', classes = '{class io.pp.arcade.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@6821ea29, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@63da79bb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@e077866, [ImportsContextCustomizer@62577d6 key = [@org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.context.SpringBootTestContextBootstrapper.class), @org.springframework.context.annotation.Import(value={io.pp.arcade.RestDocsConfiguration.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.restdocs", skip=NO), @org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc(webDriverEnabled=true, print=DEFAULT, webClientEnabled=true, addFilters=true, printOnlyOnFailure=true), @org.springframework.boot.test.autoconfigure.restdocs.AutoConfigureRestDocs(uriScheme="http", outputDir="", uriPort=8080, value="", uriHost="localhost"), @org.springframework.context.annotation.Import(value={org.springframework.boot.test.autoconfigure.restdocs.RestDocumentationContextProviderRegistrar.class}), @org.springframework.boot.test.context.SpringBootTest(args={}, webEnvironment=MOCK, value={}, properties={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.mockmvc", skip=NO)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@36546a22, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@3918c187, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@12dae582, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68878f6d], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@a1be5cb]; rollback [true]
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: select user0_.id as id1_7_, user0_.image_uri as image_ur2_7_, user0_.intra_id as intra_id3_7_, user0_.ppp as ppp4_7_, user0_.racket_type as racket_t5_7_, user0_.status_message as status_m6_7_ from user user0_ where user0_.intra_id=?
Hibernate: select pchange0_.id as id1_3_, pchange0_.created_date as created_2_3_, pchange0_.modified_date as modified3_3_, pchange0_.game_id as game_id6_3_, pchange0_.ppp_change as ppp_chan4_3_, pchange0_.ppp_result as ppp_resu5_3_, pchange0_.user_id as user_id7_3_ from pchange pchange0_ where pchange0_.user_id=? order by pchange0_.id desc limit ?
Hibernate: select count(pchange0_.id) as col_0_0_ from pchange pchange0_ where pchange0_.user_id=?
2022-06-14 16:26:35.557  INFO 68227 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@1556f2dd testClass = UserControllerTest, testInstance = io.pp.arcade.domain.user.controller.UserControllerTest@619dc070, testMethod = findUserHistorics@UserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@35e52059 testClass = UserControllerTest, locations = '{}', classes = '{class io.pp.arcade.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@6821ea29, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@63da79bb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@e077866, [ImportsContextCustomizer@62577d6 key = [@org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.context.SpringBootTestContextBootstrapper.class), @org.springframework.context.annotation.Import(value={io.pp.arcade.RestDocsConfiguration.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.restdocs", skip=NO), @org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc(webDriverEnabled=true, print=DEFAULT, webClientEnabled=true, addFilters=true, printOnlyOnFailure=true), @org.springframework.boot.test.autoconfigure.restdocs.AutoConfigureRestDocs(uriScheme="http", outputDir="", uriPort=8080, value="", uriHost="localhost"), @org.springframework.context.annotation.Import(value={org.springframework.boot.test.autoconfigure.restdocs.RestDocumentationContextProviderRegistrar.class}), @org.springframework.boot.test.context.SpringBootTest(args={}, webEnvironment=MOCK, value={}, properties={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.mockmvc", skip=NO)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@36546a22, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@3918c187, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@12dae582, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68878f6d], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2022-06-14 16:26:35.570  INFO 68227 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@1556f2dd testClass = UserControllerTest, testInstance = io.pp.arcade.domain.user.controller.UserControllerTest@65208c91, testMethod = findByPartsOfIntraId@UserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@35e52059 testClass = UserControllerTest, locations = '{}', classes = '{class io.pp.arcade.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@6821ea29, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@63da79bb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@e077866, [ImportsContextCustomizer@62577d6 key = [@org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.context.SpringBootTestContextBootstrapper.class), @org.springframework.context.annotation.Import(value={io.pp.arcade.RestDocsConfiguration.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.restdocs", skip=NO), @org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc(webDriverEnabled=true, print=DEFAULT, webClientEnabled=true, addFilters=true, printOnlyOnFailure=true), @org.springframework.boot.test.autoconfigure.restdocs.AutoConfigureRestDocs(uriScheme="http", outputDir="", uriPort=8080, value="", uriHost="localhost"), @org.springframework.context.annotation.Import(value={org.springframework.boot.test.autoconfigure.restdocs.RestDocumentationContextProviderRegistrar.class}), @org.springframework.boot.test.context.SpringBootTest(args={}, webEnvironment=MOCK, value={}, properties={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.mockmvc", skip=NO)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@36546a22, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@3918c187, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@12dae582, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68878f6d], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@a1be5cb]; rollback [true]
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: select user0_.id as id1_7_, user0_.image_uri as image_ur2_7_, user0_.intra_id as intra_id3_7_, user0_.ppp as ppp4_7_, user0_.racket_type as racket_t5_7_, user0_.status_message as status_m6_7_ from user user0_ where user0_.intra_id like ? escape ?
2022-06-14 16:26:35.755  INFO 68227 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@1556f2dd testClass = UserControllerTest, testInstance = io.pp.arcade.domain.user.controller.UserControllerTest@65208c91, testMethod = findByPartsOfIntraId@UserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@35e52059 testClass = UserControllerTest, locations = '{}', classes = '{class io.pp.arcade.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@6821ea29, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@63da79bb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@e077866, [ImportsContextCustomizer@62577d6 key = [@org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.context.SpringBootTestContextBootstrapper.class), @org.springframework.context.annotation.Import(value={io.pp.arcade.RestDocsConfiguration.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.restdocs", skip=NO), @org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc(webDriverEnabled=true, print=DEFAULT, webClientEnabled=true, addFilters=true, printOnlyOnFailure=true), @org.springframework.boot.test.autoconfigure.restdocs.AutoConfigureRestDocs(uriScheme="http", outputDir="", uriPort=8080, value="", uriHost="localhost"), @org.springframework.context.annotation.Import(value={org.springframework.boot.test.autoconfigure.restdocs.RestDocumentationContextProviderRegistrar.class}), @org.springframework.boot.test.context.SpringBootTest(args={}, webEnvironment=MOCK, value={}, properties={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.mockmvc", skip=NO)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@36546a22, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@3918c187, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@12dae582, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68878f6d], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2022-06-14 16:26:35.760  INFO 68227 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@1556f2dd testClass = UserControllerTest, testInstance = io.pp.arcade.domain.user.controller.UserControllerTest@3c62bae5, testMethod = findUser@UserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@35e52059 testClass = UserControllerTest, locations = '{}', classes = '{class io.pp.arcade.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@6821ea29, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@63da79bb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@e077866, [ImportsContextCustomizer@62577d6 key = [@org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.context.SpringBootTestContextBootstrapper.class), @org.springframework.context.annotation.Import(value={io.pp.arcade.RestDocsConfiguration.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.restdocs", skip=NO), @org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc(webDriverEnabled=true, print=DEFAULT, webClientEnabled=true, addFilters=true, printOnlyOnFailure=true), @org.springframework.boot.test.autoconfigure.restdocs.AutoConfigureRestDocs(uriScheme="http", outputDir="", uriPort=8080, value="", uriHost="localhost"), @org.springframework.context.annotation.Import(value={org.springframework.boot.test.autoconfigure.restdocs.RestDocumentationContextProviderRegistrar.class}), @org.springframework.boot.test.context.SpringBootTest(args={}, webEnvironment=MOCK, value={}, properties={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.mockmvc", skip=NO)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@36546a22, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@3918c187, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@12dae582, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68878f6d], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@a1be5cb]; rollback [true]
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
2022-06-14 16:26:35.915  INFO 68227 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@1556f2dd testClass = UserControllerTest, testInstance = io.pp.arcade.domain.user.controller.UserControllerTest@3c62bae5, testMethod = findUser@UserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@35e52059 testClass = UserControllerTest, locations = '{}', classes = '{class io.pp.arcade.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@6821ea29, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@63da79bb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@e077866, [ImportsContextCustomizer@62577d6 key = [@org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.context.SpringBootTestContextBootstrapper.class), @org.springframework.context.annotation.Import(value={io.pp.arcade.RestDocsConfiguration.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.restdocs", skip=NO), @org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc(webDriverEnabled=true, print=DEFAULT, webClientEnabled=true, addFilters=true, printOnlyOnFailure=true), @org.springframework.boot.test.autoconfigure.restdocs.AutoConfigureRestDocs(uriScheme="http", outputDir="", uriPort=8080, value="", uriHost="localhost"), @org.springframework.context.annotation.Import(value={org.springframework.boot.test.autoconfigure.restdocs.RestDocumentationContextProviderRegistrar.class}), @org.springframework.boot.test.context.SpringBootTest(args={}, webEnvironment=MOCK, value={}, properties={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.mockmvc", skip=NO)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@36546a22, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@3918c187, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@12dae582, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68878f6d], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
