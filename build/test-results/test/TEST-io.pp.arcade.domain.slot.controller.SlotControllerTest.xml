<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="io.pp.arcade.domain.slot.controller.SlotControllerTest" tests="3" skipped="0" failures="0" errors="0" timestamp="2022-06-14T07:26:40" hostname="KDHs-MacBook-Pro.local" time="0.488">
  <properties/>
  <testcase name="slotRemoveUser()" classname="io.pp.arcade.domain.slot.controller.SlotControllerTest" time="0.13"/>
  <testcase name="slotStatusList()" classname="io.pp.arcade.domain.slot.controller.SlotControllerTest" time="0.188"/>
  <testcase name="slotAddUser()" classname="io.pp.arcade.domain.slot.controller.SlotControllerTest" time="0.163"/>
  <system-out><![CDATA[2022-06-14 16:26:40.593  INFO 68227 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [io.pp.arcade.domain.slot.controller.SlotControllerTest], using SpringBootContextLoader
2022-06-14 16:26:40.594  INFO 68227 --- [    Test worker] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [io.pp.arcade.domain.slot.controller.SlotControllerTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2022-06-14 16:26:40.594  INFO 68227 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [io.pp.arcade.domain.slot.controller.SlotControllerTest]: SlotControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2022-06-14 16:26:40.603  INFO 68227 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration io.pp.arcade.Application for test class io.pp.arcade.domain.slot.controller.SlotControllerTest
2022-06-14 16:26:40.605  INFO 68227 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2022-06-14 16:26:40.605  INFO 68227 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2a9732a7, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5170ebb6, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@773236a7, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1abe611c, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@92f6ae6, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5fd40d2e, org.springframework.test.context.transaction.TransactionalTestExecutionListener@39b58f7d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@50eaafd6, org.springframework.test.context.event.EventPublishingTestExecutionListener@22608777, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5d225368, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@48f9f1d6, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4d687300, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6b951ee5, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@2463a9ec, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@23938bf7]
2022-06-14 16:26:40.610  INFO 68227 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@3b21b0f5 testClass = SlotControllerTest, testInstance = io.pp.arcade.domain.slot.controller.SlotControllerTest@1331742, testMethod = slotRemoveUser@SlotControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@38c61ab testClass = SlotControllerTest, locations = '{}', classes = '{class io.pp.arcade.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@6821ea29, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@63da79bb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@e077866, [ImportsContextCustomizer@68378acc key = [@org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.context.SpringBootTestContextBootstrapper.class), @org.springframework.context.annotation.Import(value={io.pp.arcade.RestDocsConfiguration.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.restdocs", skip=NO), @org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc(webDriverEnabled=true, print=DEFAULT, webClientEnabled=true, addFilters=true, printOnlyOnFailure=true), @org.springframework.boot.test.autoconfigure.restdocs.AutoConfigureRestDocs(uriScheme="http", outputDir="", uriPort=8080, value="", uriHost="localhost"), @org.springframework.context.annotation.Import(value={org.springframework.boot.test.autoconfigure.restdocs.RestDocumentationContextProviderRegistrar.class}), @org.springframework.boot.test.context.SpringBootTest(args={}, webEnvironment=MOCK, value={}, properties={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.mockmvc", skip=NO)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@36546a22, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@3918c187, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@12dae582, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68878f6d], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@a1be5cb]; rollback [true]
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select slot0_.id as id1_5_, slot0_.created_date as created_2_5_, slot0_.modified_date as modified3_5_, slot0_.game_ppp as game_ppp4_5_, slot0_.head_count as head_cou5_5_, slot0_.table_id as table_id6_5_, slot0_.team1_id as team9_5_, slot0_.team2_id as team10_5_, slot0_.time as time7_5_, slot0_.type as type8_5_ from slot slot0_
Hibernate: select currentmat0_.id as id1_0_, currentmat0_.created_date as created_2_0_, currentmat0_.modified_date as modified3_0_, currentmat0_.game_id as game_id6_0_, currentmat0_.is_matched as is_match4_0_, currentmat0_.match_imminent as match_im5_0_, currentmat0_.slot_id as slot_id7_0_, currentmat0_.user_id as user_id8_0_ from current_match currentmat0_ where currentmat0_.user_id=?
Hibernate: update team set head_count=?, score=?, team_ppp=?, user1_id=?, user2_id=?, win=? where id=?
Hibernate: update slot set modified_date=?, game_ppp=?, head_count=?, table_id=?, team1_id=?, team2_id=?, time=?, type=? where id=?
Hibernate: select slot0_.id as id1_5_, slot0_.created_date as created_2_5_, slot0_.modified_date as modified3_5_, slot0_.game_ppp as game_ppp4_5_, slot0_.head_count as head_cou5_5_, slot0_.table_id as table_id6_5_, slot0_.team1_id as team9_5_, slot0_.team2_id as team10_5_, slot0_.time as time7_5_, slot0_.type as type8_5_ from slot slot0_ where slot0_.created_date>?
Hibernate: select currentmat0_.id as id1_0_, currentmat0_.created_date as created_2_0_, currentmat0_.modified_date as modified3_0_, currentmat0_.game_id as game_id6_0_, currentmat0_.is_matched as is_match4_0_, currentmat0_.match_imminent as match_im5_0_, currentmat0_.slot_id as slot_id7_0_, currentmat0_.user_id as user_id8_0_ from current_match currentmat0_ where currentmat0_.user_id=?
2022-06-14 16:26:40.738  INFO 68227 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@3b21b0f5 testClass = SlotControllerTest, testInstance = io.pp.arcade.domain.slot.controller.SlotControllerTest@1331742, testMethod = slotRemoveUser@SlotControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@38c61ab testClass = SlotControllerTest, locations = '{}', classes = '{class io.pp.arcade.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@6821ea29, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@63da79bb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@e077866, [ImportsContextCustomizer@68378acc key = [@org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.context.SpringBootTestContextBootstrapper.class), @org.springframework.context.annotation.Import(value={io.pp.arcade.RestDocsConfiguration.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.restdocs", skip=NO), @org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc(webDriverEnabled=true, print=DEFAULT, webClientEnabled=true, addFilters=true, printOnlyOnFailure=true), @org.springframework.boot.test.autoconfigure.restdocs.AutoConfigureRestDocs(uriScheme="http", outputDir="", uriPort=8080, value="", uriHost="localhost"), @org.springframework.context.annotation.Import(value={org.springframework.boot.test.autoconfigure.restdocs.RestDocumentationContextProviderRegistrar.class}), @org.springframework.boot.test.context.SpringBootTest(args={}, webEnvironment=MOCK, value={}, properties={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.mockmvc", skip=NO)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@36546a22, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@3918c187, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@12dae582, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68878f6d], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2022-06-14 16:26:40.748  INFO 68227 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@3b21b0f5 testClass = SlotControllerTest, testInstance = io.pp.arcade.domain.slot.controller.SlotControllerTest@287cd9b2, testMethod = slotStatusList@SlotControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@38c61ab testClass = SlotControllerTest, locations = '{}', classes = '{class io.pp.arcade.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@6821ea29, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@63da79bb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@e077866, [ImportsContextCustomizer@68378acc key = [@org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.context.SpringBootTestContextBootstrapper.class), @org.springframework.context.annotation.Import(value={io.pp.arcade.RestDocsConfiguration.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.restdocs", skip=NO), @org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc(webDriverEnabled=true, print=DEFAULT, webClientEnabled=true, addFilters=true, printOnlyOnFailure=true), @org.springframework.boot.test.autoconfigure.restdocs.AutoConfigureRestDocs(uriScheme="http", outputDir="", uriPort=8080, value="", uriHost="localhost"), @org.springframework.context.annotation.Import(value={org.springframework.boot.test.autoconfigure.restdocs.RestDocumentationContextProviderRegistrar.class}), @org.springframework.boot.test.context.SpringBootTest(args={}, webEnvironment=MOCK, value={}, properties={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.mockmvc", skip=NO)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@36546a22, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@3918c187, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@12dae582, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68878f6d], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@a1be5cb]; rollback [true]
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select slot0_.id as id1_5_, slot0_.created_date as created_2_5_, slot0_.modified_date as modified3_5_, slot0_.game_ppp as game_ppp4_5_, slot0_.head_count as head_cou5_5_, slot0_.table_id as table_id6_5_, slot0_.team1_id as team9_5_, slot0_.team2_id as team10_5_, slot0_.time as time7_5_, slot0_.type as type8_5_ from slot slot0_
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: select slot0_.id as id1_5_, slot0_.created_date as created_2_5_, slot0_.modified_date as modified3_5_, slot0_.game_ppp as game_ppp4_5_, slot0_.head_count as head_cou5_5_, slot0_.table_id as table_id6_5_, slot0_.team1_id as team9_5_, slot0_.team2_id as team10_5_, slot0_.time as time7_5_, slot0_.type as type8_5_ from slot slot0_ where slot0_.created_date>?
Hibernate: select currentmat0_.id as id1_0_, currentmat0_.created_date as created_2_0_, currentmat0_.modified_date as modified3_0_, currentmat0_.game_id as game_id6_0_, currentmat0_.is_matched as is_match4_0_, currentmat0_.match_imminent as match_im5_0_, currentmat0_.slot_id as slot_id7_0_, currentmat0_.user_id as user_id8_0_ from current_match currentmat0_ where currentmat0_.user_id=?
Hibernate: update slot set modified_date=?, game_ppp=?, head_count=?, table_id=?, team1_id=?, team2_id=?, time=?, type=? where id=?
Hibernate: select slot0_.id as id1_5_, slot0_.created_date as created_2_5_, slot0_.modified_date as modified3_5_, slot0_.game_ppp as game_ppp4_5_, slot0_.head_count as head_cou5_5_, slot0_.table_id as table_id6_5_, slot0_.team1_id as team9_5_, slot0_.team2_id as team10_5_, slot0_.time as time7_5_, slot0_.type as type8_5_ from slot slot0_ where slot0_.created_date>?
Hibernate: select currentmat0_.id as id1_0_, currentmat0_.created_date as created_2_0_, currentmat0_.modified_date as modified3_0_, currentmat0_.game_id as game_id6_0_, currentmat0_.is_matched as is_match4_0_, currentmat0_.match_imminent as match_im5_0_, currentmat0_.slot_id as slot_id7_0_, currentmat0_.user_id as user_id8_0_ from current_match currentmat0_ where currentmat0_.user_id=?
Hibernate: update slot set modified_date=?, game_ppp=?, head_count=?, table_id=?, team1_id=?, team2_id=?, time=?, type=? where id=?
Hibernate: select slot0_.id as id1_5_, slot0_.created_date as created_2_5_, slot0_.modified_date as modified3_5_, slot0_.game_ppp as game_ppp4_5_, slot0_.head_count as head_cou5_5_, slot0_.table_id as table_id6_5_, slot0_.team1_id as team9_5_, slot0_.team2_id as team10_5_, slot0_.time as time7_5_, slot0_.type as type8_5_ from slot slot0_ where slot0_.created_date>?
Hibernate: select currentmat0_.id as id1_0_, currentmat0_.created_date as created_2_0_, currentmat0_.modified_date as modified3_0_, currentmat0_.game_id as game_id6_0_, currentmat0_.is_matched as is_match4_0_, currentmat0_.match_imminent as match_im5_0_, currentmat0_.slot_id as slot_id7_0_, currentmat0_.user_id as user_id8_0_ from current_match currentmat0_ where currentmat0_.user_id=?
Hibernate: update slot set modified_date=?, game_ppp=?, head_count=?, table_id=?, team1_id=?, team2_id=?, time=?, type=? where id=?
Hibernate: select slot0_.id as id1_5_, slot0_.created_date as created_2_5_, slot0_.modified_date as modified3_5_, slot0_.game_ppp as game_ppp4_5_, slot0_.head_count as head_cou5_5_, slot0_.table_id as table_id6_5_, slot0_.team1_id as team9_5_, slot0_.team2_id as team10_5_, slot0_.time as time7_5_, slot0_.type as type8_5_ from slot slot0_ where slot0_.created_date>?
Hibernate: select currentmat0_.id as id1_0_, currentmat0_.created_date as created_2_0_, currentmat0_.modified_date as modified3_0_, currentmat0_.game_id as game_id6_0_, currentmat0_.is_matched as is_match4_0_, currentmat0_.match_imminent as match_im5_0_, currentmat0_.slot_id as slot_id7_0_, currentmat0_.user_id as user_id8_0_ from current_match currentmat0_ where currentmat0_.user_id=?
Hibernate: update slot set modified_date=?, game_ppp=?, head_count=?, table_id=?, team1_id=?, team2_id=?, time=?, type=? where id=?
Hibernate: select slot0_.id as id1_5_, slot0_.created_date as created_2_5_, slot0_.modified_date as modified3_5_, slot0_.game_ppp as game_ppp4_5_, slot0_.head_count as head_cou5_5_, slot0_.table_id as table_id6_5_, slot0_.team1_id as team9_5_, slot0_.team2_id as team10_5_, slot0_.time as time7_5_, slot0_.type as type8_5_ from slot slot0_ where slot0_.created_date>?
Hibernate: select currentmat0_.id as id1_0_, currentmat0_.created_date as created_2_0_, currentmat0_.modified_date as modified3_0_, currentmat0_.game_id as game_id6_0_, currentmat0_.is_matched as is_match4_0_, currentmat0_.match_imminent as match_im5_0_, currentmat0_.slot_id as slot_id7_0_, currentmat0_.user_id as user_id8_0_ from current_match currentmat0_ where currentmat0_.user_id=?
2022-06-14 16:26:40.931  INFO 68227 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@3b21b0f5 testClass = SlotControllerTest, testInstance = io.pp.arcade.domain.slot.controller.SlotControllerTest@287cd9b2, testMethod = slotStatusList@SlotControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@38c61ab testClass = SlotControllerTest, locations = '{}', classes = '{class io.pp.arcade.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@6821ea29, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@63da79bb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@e077866, [ImportsContextCustomizer@68378acc key = [@org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.context.SpringBootTestContextBootstrapper.class), @org.springframework.context.annotation.Import(value={io.pp.arcade.RestDocsConfiguration.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.restdocs", skip=NO), @org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc(webDriverEnabled=true, print=DEFAULT, webClientEnabled=true, addFilters=true, printOnlyOnFailure=true), @org.springframework.boot.test.autoconfigure.restdocs.AutoConfigureRestDocs(uriScheme="http", outputDir="", uriPort=8080, value="", uriHost="localhost"), @org.springframework.context.annotation.Import(value={org.springframework.boot.test.autoconfigure.restdocs.RestDocumentationContextProviderRegistrar.class}), @org.springframework.boot.test.context.SpringBootTest(args={}, webEnvironment=MOCK, value={}, properties={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.mockmvc", skip=NO)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@36546a22, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@3918c187, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@12dae582, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68878f6d], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2022-06-14 16:26:40.937  INFO 68227 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@3b21b0f5 testClass = SlotControllerTest, testInstance = io.pp.arcade.domain.slot.controller.SlotControllerTest@2bcfdefe, testMethod = slotAddUser@SlotControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@38c61ab testClass = SlotControllerTest, locations = '{}', classes = '{class io.pp.arcade.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@6821ea29, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@63da79bb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@e077866, [ImportsContextCustomizer@68378acc key = [@org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.context.SpringBootTestContextBootstrapper.class), @org.springframework.context.annotation.Import(value={io.pp.arcade.RestDocsConfiguration.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.restdocs", skip=NO), @org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc(webDriverEnabled=true, print=DEFAULT, webClientEnabled=true, addFilters=true, printOnlyOnFailure=true), @org.springframework.boot.test.autoconfigure.restdocs.AutoConfigureRestDocs(uriScheme="http", outputDir="", uriPort=8080, value="", uriHost="localhost"), @org.springframework.context.annotation.Import(value={org.springframework.boot.test.autoconfigure.restdocs.RestDocumentationContextProviderRegistrar.class}), @org.springframework.boot.test.context.SpringBootTest(args={}, webEnvironment=MOCK, value={}, properties={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.mockmvc", skip=NO)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@36546a22, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@3918c187, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@12dae582, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68878f6d], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@a1be5cb]; rollback [true]
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select slot0_.id as id1_5_, slot0_.created_date as created_2_5_, slot0_.modified_date as modified3_5_, slot0_.game_ppp as game_ppp4_5_, slot0_.head_count as head_cou5_5_, slot0_.table_id as table_id6_5_, slot0_.team1_id as team9_5_, slot0_.team2_id as team10_5_, slot0_.time as time7_5_, slot0_.type as type8_5_ from slot slot0_
Hibernate: select currentmat0_.id as id1_0_, currentmat0_.created_date as created_2_0_, currentmat0_.modified_date as modified3_0_, currentmat0_.game_id as game_id6_0_, currentmat0_.is_matched as is_match4_0_, currentmat0_.match_imminent as match_im5_0_, currentmat0_.slot_id as slot_id7_0_, currentmat0_.user_id as user_id8_0_ from current_match currentmat0_ where currentmat0_.user_id=?
Hibernate: insert into current_match (created_date, modified_date, game_id, is_matched, match_imminent, slot_id, user_id) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: select currentmat0_.id as id1_0_, currentmat0_.created_date as created_2_0_, currentmat0_.modified_date as modified3_0_, currentmat0_.game_id as game_id6_0_, currentmat0_.is_matched as is_match4_0_, currentmat0_.match_imminent as match_im5_0_, currentmat0_.slot_id as slot_id7_0_, currentmat0_.user_id as user_id8_0_ from current_match currentmat0_ where currentmat0_.user_id=?
Hibernate: select currentmat0_.id as id1_0_, currentmat0_.created_date as created_2_0_, currentmat0_.modified_date as modified3_0_, currentmat0_.game_id as game_id6_0_, currentmat0_.is_matched as is_match4_0_, currentmat0_.match_imminent as match_im5_0_, currentmat0_.slot_id as slot_id7_0_, currentmat0_.user_id as user_id8_0_ from current_match currentmat0_ where currentmat0_.user_id=?
Hibernate: insert into current_match (created_date, modified_date, game_id, is_matched, match_imminent, slot_id, user_id) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: select currentmat0_.id as id1_0_, currentmat0_.created_date as created_2_0_, currentmat0_.modified_date as modified3_0_, currentmat0_.game_id as game_id6_0_, currentmat0_.is_matched as is_match4_0_, currentmat0_.match_imminent as match_im5_0_, currentmat0_.slot_id as slot_id7_0_, currentmat0_.user_id as user_id8_0_ from current_match currentmat0_ where currentmat0_.user_id=?
Hibernate: update team set head_count=?, score=?, team_ppp=?, user1_id=?, user2_id=?, win=? where id=?
Hibernate: update team set head_count=?, score=?, team_ppp=?, user1_id=?, user2_id=?, win=? where id=?
Hibernate: update slot set modified_date=?, game_ppp=?, head_count=?, table_id=?, team1_id=?, team2_id=?, time=?, type=? where id=?
Hibernate: update current_match set modified_date=?, game_id=?, is_matched=?, match_imminent=?, slot_id=?, user_id=? where id=?
Hibernate: select currentmat0_.id as id1_0_, currentmat0_.created_date as created_2_0_, currentmat0_.modified_date as modified3_0_, currentmat0_.game_id as game_id6_0_, currentmat0_.is_matched as is_match4_0_, currentmat0_.match_imminent as match_im5_0_, currentmat0_.slot_id as slot_id7_0_, currentmat0_.user_id as user_id8_0_ from current_match currentmat0_ where currentmat0_.user_id=?
Hibernate: update current_match set modified_date=?, game_id=?, is_matched=?, match_imminent=?, slot_id=?, user_id=? where id=?
Hibernate: select currentmat0_.id as id1_0_, currentmat0_.created_date as created_2_0_, currentmat0_.modified_date as modified3_0_, currentmat0_.game_id as game_id6_0_, currentmat0_.is_matched as is_match4_0_, currentmat0_.match_imminent as match_im5_0_, currentmat0_.slot_id as slot_id7_0_, currentmat0_.user_id as user_id8_0_ from current_match currentmat0_ where currentmat0_.user_id=?
Hibernate: select slot0_.id as id1_5_, slot0_.created_date as created_2_5_, slot0_.modified_date as modified3_5_, slot0_.game_ppp as game_ppp4_5_, slot0_.head_count as head_cou5_5_, slot0_.table_id as table_id6_5_, slot0_.team1_id as team9_5_, slot0_.team2_id as team10_5_, slot0_.time as time7_5_, slot0_.type as type8_5_ from slot slot0_ where slot0_.created_date>?
Hibernate: select currentmat0_.id as id1_0_, currentmat0_.created_date as created_2_0_, currentmat0_.modified_date as modified3_0_, currentmat0_.game_id as game_id6_0_, currentmat0_.is_matched as is_match4_0_, currentmat0_.match_imminent as match_im5_0_, currentmat0_.slot_id as slot_id7_0_, currentmat0_.user_id as user_id8_0_ from current_match currentmat0_ where currentmat0_.user_id=?
Hibernate: select currentmat0_.id as id1_0_, currentmat0_.created_date as created_2_0_, currentmat0_.modified_date as modified3_0_, currentmat0_.game_id as game_id6_0_, currentmat0_.is_matched as is_match4_0_, currentmat0_.match_imminent as match_im5_0_, currentmat0_.slot_id as slot_id7_0_, currentmat0_.user_id as user_id8_0_ from current_match currentmat0_ where currentmat0_.user_id=?
2022-06-14 16:26:41.096  INFO 68227 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@3b21b0f5 testClass = SlotControllerTest, testInstance = io.pp.arcade.domain.slot.controller.SlotControllerTest@2bcfdefe, testMethod = slotAddUser@SlotControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@38c61ab testClass = SlotControllerTest, locations = '{}', classes = '{class io.pp.arcade.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@6821ea29, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@63da79bb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@e077866, [ImportsContextCustomizer@68378acc key = [@org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.context.SpringBootTestContextBootstrapper.class), @org.springframework.context.annotation.Import(value={io.pp.arcade.RestDocsConfiguration.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.restdocs", skip=NO), @org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc(webDriverEnabled=true, print=DEFAULT, webClientEnabled=true, addFilters=true, printOnlyOnFailure=true), @org.springframework.boot.test.autoconfigure.restdocs.AutoConfigureRestDocs(uriScheme="http", outputDir="", uriPort=8080, value="", uriHost="localhost"), @org.springframework.context.annotation.Import(value={org.springframework.boot.test.autoconfigure.restdocs.RestDocumentationContextProviderRegistrar.class}), @org.springframework.boot.test.context.SpringBootTest(args={}, webEnvironment=MOCK, value={}, properties={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.mockmvc", skip=NO)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@36546a22, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@3918c187, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@12dae582, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@68878f6d], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
]]></system-out>
  <system-err><![CDATA[유저가 3명이라 터졌을지도!
]]></system-err>
</testsuite>
