<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="io.pp.arcade.domain.game.controller.GameControllerTest" tests="2" skipped="0" failures="0" errors="0" timestamp="2022-06-13T03:00:17" hostname="KDHs-MacBook-Pro.local" time="0.728">
  <properties/>
  <testcase name="saveGameResult()" classname="io.pp.arcade.domain.game.controller.GameControllerTest" time="0.559"/>
  <testcase name="gameUserInfo()" classname="io.pp.arcade.domain.game.controller.GameControllerTest" time="0.158"/>
  <system-out><![CDATA[2022-06-13 12:00:17.791  INFO 53749 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [io.pp.arcade.domain.game.controller.GameControllerTest], using SpringBootContextLoader
2022-06-13 12:00:17.794  INFO 53749 --- [    Test worker] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [io.pp.arcade.domain.game.controller.GameControllerTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2022-06-13 12:00:17.794  INFO 53749 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [io.pp.arcade.domain.game.controller.GameControllerTest]: GameControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2022-06-13 12:00:17.821  INFO 53749 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration io.pp.arcade.Application for test class io.pp.arcade.domain.game.controller.GameControllerTest
2022-06-13 12:00:17.829  INFO 53749 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2022-06-13 12:00:17.830  INFO 53749 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3520d2db, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7c4b7bc3, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@5a36a405, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@45b7b254, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@76320633, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5100fe55, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3ef97efc, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@46244e65, org.springframework.test.context.event.EventPublishingTestExecutionListener@20c1cb0c, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@76e56b17, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@31ee5a9, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@67add4c9, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@491afa9b, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@147a8d7c, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@60bd11f7]
2022-06-13 12:00:17.848  INFO 53749 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@7aca4144 testClass = GameControllerTest, testInstance = io.pp.arcade.domain.game.controller.GameControllerTest@a19fe87, testMethod = saveGameResult@GameControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26aecf31 testClass = GameControllerTest, locations = '{}', classes = '{class io.pp.arcade.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@56a4479a, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@63da79bb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@67ab1c47, [ImportsContextCustomizer@77fa509a key = [@org.springframework.boot.test.context.SpringBootTest(args={}, webEnvironment=MOCK, value={}, properties={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.mockmvc", skip=NO), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.test.autoconfigure.restdocs.RestDocumentationContextProviderRegistrar.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.restdocs", skip=NO), @org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc(webDriverEnabled=true, print=DEFAULT, webClientEnabled=true, addFilters=true, printOnlyOnFailure=true), @org.springframework.boot.test.autoconfigure.restdocs.AutoConfigureRestDocs(uriScheme="http", outputDir="", uriPort=8080, value="", uriHost="localhost"), @org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.context.SpringBootTestContextBootstrapper.class), @org.springframework.context.annotation.Import(value={io.pp.arcade.RestDocsConfiguration.class})]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2a3c96e3, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@cb191ca, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@75d0911a, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@15d49048], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5d4a1d2c]; rollback [true]
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select slot0_.id as id1_3_, slot0_.created_date as created_2_3_, slot0_.modified_date as modified3_3_, slot0_.game_ppp as game_ppp4_3_, slot0_.head_count as head_cou5_3_, slot0_.table_id as table_id6_3_, slot0_.team1_id as team9_3_, slot0_.team2_id as team10_3_, slot0_.time as time7_3_, slot0_.type as type8_3_ from slot slot0_
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into pchange (created_date, modified_date, game_id, ppp_change, ppp_result, user_id) values (?, ?, ?, ?, ?, ?)
Hibernate: select game0_.id as id1_1_, game0_.season as season2_1_, game0_.slot_id as slot_id6_1_, game0_.status as status3_1_, game0_.team1_id as team7_1_, game0_.team2_id as team8_1_, game0_.time as time4_1_, game0_.type as type5_1_ from game game0_ where game0_.status=? limit ?
Hibernate: select pchange0_.id as id1_2_, pchange0_.created_date as created_2_2_, pchange0_.modified_date as modified3_2_, pchange0_.game_id as game_id6_2_, pchange0_.ppp_change as ppp_chan4_2_, pchange0_.ppp_result as ppp_resu5_2_, pchange0_.user_id as user_id7_2_ from pchange pchange0_ where pchange0_.user_id=? and pchange0_.game_id=?
Hibernate: select pchange0_.id as id1_2_, pchange0_.created_date as created_2_2_, pchange0_.modified_date as modified3_2_, pchange0_.game_id as game_id6_2_, pchange0_.ppp_change as ppp_chan4_2_, pchange0_.ppp_result as ppp_resu5_2_, pchange0_.user_id as user_id7_2_ from pchange pchange0_ where pchange0_.user_id=? and pchange0_.game_id=?
Hibernate: select pchange0_.id as id1_2_, pchange0_.created_date as created_2_2_, pchange0_.modified_date as modified3_2_, pchange0_.game_id as game_id6_2_, pchange0_.ppp_change as ppp_chan4_2_, pchange0_.ppp_result as ppp_resu5_2_, pchange0_.user_id as user_id7_2_ from pchange pchange0_ where pchange0_.user_id=? and pchange0_.game_id=?
Hibernate: select pchange0_.id as id1_2_, pchange0_.created_date as created_2_2_, pchange0_.modified_date as modified3_2_, pchange0_.game_id as game_id6_2_, pchange0_.ppp_change as ppp_chan4_2_, pchange0_.ppp_result as ppp_resu5_2_, pchange0_.user_id as user_id7_2_ from pchange pchange0_ where pchange0_.user_id=? and pchange0_.game_id=?
Hibernate: select pchange0_.id as id1_2_, pchange0_.created_date as created_2_2_, pchange0_.modified_date as modified3_2_, pchange0_.game_id as game_id6_2_, pchange0_.ppp_change as ppp_chan4_2_, pchange0_.ppp_result as ppp_resu5_2_, pchange0_.user_id as user_id7_2_ from pchange pchange0_ where pchange0_.user_id=? and pchange0_.game_id=?
Hibernate: select pchange0_.id as id1_2_, pchange0_.created_date as created_2_2_, pchange0_.modified_date as modified3_2_, pchange0_.game_id as game_id6_2_, pchange0_.ppp_change as ppp_chan4_2_, pchange0_.ppp_result as ppp_resu5_2_, pchange0_.user_id as user_id7_2_ from pchange pchange0_ where pchange0_.user_id=? and pchange0_.game_id=?
2022-06-13 12:00:18.401  INFO 53749 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@7aca4144 testClass = GameControllerTest, testInstance = io.pp.arcade.domain.game.controller.GameControllerTest@a19fe87, testMethod = saveGameResult@GameControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26aecf31 testClass = GameControllerTest, locations = '{}', classes = '{class io.pp.arcade.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@56a4479a, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@63da79bb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@67ab1c47, [ImportsContextCustomizer@77fa509a key = [@org.springframework.boot.test.context.SpringBootTest(args={}, webEnvironment=MOCK, value={}, properties={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.mockmvc", skip=NO), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.test.autoconfigure.restdocs.RestDocumentationContextProviderRegistrar.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.restdocs", skip=NO), @org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc(webDriverEnabled=true, print=DEFAULT, webClientEnabled=true, addFilters=true, printOnlyOnFailure=true), @org.springframework.boot.test.autoconfigure.restdocs.AutoConfigureRestDocs(uriScheme="http", outputDir="", uriPort=8080, value="", uriHost="localhost"), @org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.context.SpringBootTestContextBootstrapper.class), @org.springframework.context.annotation.Import(value={io.pp.arcade.RestDocsConfiguration.class})]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2a3c96e3, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@cb191ca, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@75d0911a, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@15d49048], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2022-06-13 12:00:18.420  INFO 53749 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@7aca4144 testClass = GameControllerTest, testInstance = io.pp.arcade.domain.game.controller.GameControllerTest@3a770af8, testMethod = gameUserInfo@GameControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26aecf31 testClass = GameControllerTest, locations = '{}', classes = '{class io.pp.arcade.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@56a4479a, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@63da79bb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@67ab1c47, [ImportsContextCustomizer@77fa509a key = [@org.springframework.boot.test.context.SpringBootTest(args={}, webEnvironment=MOCK, value={}, properties={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.mockmvc", skip=NO), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.test.autoconfigure.restdocs.RestDocumentationContextProviderRegistrar.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.restdocs", skip=NO), @org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc(webDriverEnabled=true, print=DEFAULT, webClientEnabled=true, addFilters=true, printOnlyOnFailure=true), @org.springframework.boot.test.autoconfigure.restdocs.AutoConfigureRestDocs(uriScheme="http", outputDir="", uriPort=8080, value="", uriHost="localhost"), @org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.context.SpringBootTestContextBootstrapper.class), @org.springframework.context.annotation.Import(value={io.pp.arcade.RestDocsConfiguration.class})]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2a3c96e3, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@cb191ca, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@75d0911a, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@15d49048], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5d4a1d2c]; rollback [true]
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into user (image_uri, intra_id, ppp, racket_type, status_message) values (?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into team (head_count, score, team_ppp, user1_id, user2_id, win) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into slot (created_date, modified_date, game_ppp, head_count, table_id, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select slot0_.id as id1_3_, slot0_.created_date as created_2_3_, slot0_.modified_date as modified3_3_, slot0_.game_ppp as game_ppp4_3_, slot0_.head_count as head_cou5_3_, slot0_.table_id as table_id6_3_, slot0_.team1_id as team9_3_, slot0_.team2_id as team10_3_, slot0_.time as time7_3_, slot0_.type as type8_3_ from slot slot0_
Hibernate: insert into game (season, slot_id, status, team1_id, team2_id, time, type) values (?, ?, ?, ?, ?, ?, ?)
2022-06-13 12:00:18.570  INFO 53749 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@7aca4144 testClass = GameControllerTest, testInstance = io.pp.arcade.domain.game.controller.GameControllerTest@3a770af8, testMethod = gameUserInfo@GameControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26aecf31 testClass = GameControllerTest, locations = '{}', classes = '{class io.pp.arcade.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@56a4479a, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@63da79bb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@67ab1c47, [ImportsContextCustomizer@77fa509a key = [@org.springframework.boot.test.context.SpringBootTest(args={}, webEnvironment=MOCK, value={}, properties={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.mockmvc", skip=NO), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.test.autoconfigure.restdocs.RestDocumentationContextProviderRegistrar.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.restdocs", skip=NO), @org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc(webDriverEnabled=true, print=DEFAULT, webClientEnabled=true, addFilters=true, printOnlyOnFailure=true), @org.springframework.boot.test.autoconfigure.restdocs.AutoConfigureRestDocs(uriScheme="http", outputDir="", uriPort=8080, value="", uriHost="localhost"), @org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.context.SpringBootTestContextBootstrapper.class), @org.springframework.context.annotation.Import(value={io.pp.arcade.RestDocsConfiguration.class})]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2a3c96e3, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@cb191ca, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@75d0911a, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@15d49048], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
