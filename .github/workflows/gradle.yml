# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "test-deploy" ]
env:
  DOCKER_USER: ${{ secrets.DOCKER_USER }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  IMAGE_NAME: wken5577/test-server
  
permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v3
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: make application ymls
      run: |
        cd ./src/main/resources
        echo "${{ secrets.APPLICATION_YML }}" > ./application.yml
        echo "${{ secrets.APPLICATION_TEST_YML }}" > ./application-test.yml
        cat application.yml
      shell: bash
      
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
          username: ${{ env.DOCKER_USER }}
          password: ${{ env.DOCKER_PASSWORD }}
    
    - name: Build with Gradle
      run: ./gradlew bootWar
      
    - name: build new docker image as latest tag
      run: |
        docker build -t ${{ env.IMAGE_NAME }}:latest .
        docker push ${{ env.IMAGE_NAME }}:latest
      

      
